// automatically generated by rust-bindgen

#![allow(non_camel_case_types,
         non_upper_case_globals,
         non_snake_case,
         unused_must_use,
         dead_code)]
pub type int8_t = i8;
pub type int16_t = i16;
pub type int32_t = i32;
pub type int64_t = i64;
pub type uint8_t = u8;
pub type uint16_t = u16;
pub type uint32_t = u32;
pub type uint64_t = u64;
pub type int_least8_t = ::std::os::raw::c_char;
pub type int_least16_t = ::std::os::raw::c_short;
pub type int_least32_t = ::std::os::raw::c_int;
pub type int_least64_t = ::std::os::raw::c_long;
pub type uint_least8_t = ::std::os::raw::c_uchar;
pub type uint_least16_t = ::std::os::raw::c_ushort;
pub type uint_least32_t = ::std::os::raw::c_uint;
pub type uint_least64_t = ::std::os::raw::c_ulong;
pub type int_fast8_t = ::std::os::raw::c_char;
pub type int_fast16_t = ::std::os::raw::c_long;
pub type int_fast32_t = ::std::os::raw::c_long;

pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type uint_fast16_t = ::std::os::raw::c_ulong;
pub type uint_fast32_t = ::std::os::raw::c_ulong;
pub type uint_fast64_t = ::std::os::raw::c_ulong;
pub type intptr_t = isize;
pub type uintptr_t = usize;
pub type intmax_t = ::std::os::raw::c_long;
pub type uintmax_t = ::std::os::raw::c_ulong;
pub type __gwchar_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct imaxdiv_t {
    pub quot: ::std::os::raw::c_long,
    pub rem: ::std::os::raw::c_long,
}
impl ::std::default::Default for imaxdiv_t {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type sauchar_t = uint8_t;
pub type saint_t = int32_t;
pub type saidx64_t = int64_t;
#[link(name = "divsufsort64", kind = "static")]
extern "C" {
    pub fn divsufsort64(T: *const sauchar_t, SA: *mut saidx64_t, n: saidx64_t) -> saint_t;
    pub fn divsufsort64_version() -> *const ::std::os::raw::c_char;
    pub fn sa_search64(T: *const sauchar_t,
                       Tsize: saidx64_t,
                       P: *const sauchar_t,
                       Psize: saidx64_t,
                       SA: *const saidx64_t,
                       SAsize: saidx64_t,
                       left: *mut saidx64_t)
                       -> saidx64_t;

    pub fn sa_searchb64(T: *const sauchar_t,
                        Tsize: saidx64_t,
                        P: *const sauchar_t,
                        Psize: saidx64_t,
                        SA: *const saidx64_t,
                        SAsize: saidx64_t,
                        left: *mut saidx64_t,
                        init_left: saidx64_t,
                        init_right: saidx64_t)
                        -> saidx64_t;
}

pub type idx = saidx64_t;
